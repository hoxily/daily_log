2014-01-27 working log

被抓取对象选择的HTML元素为table，所以数据都位于td标签内，不会出现数据中嵌入标签的情况，如 <div>ab<span>cd</span>ef</div>。
按照预处理HTML片段然后交给PlainTextCodec来处理的思路，可以设想这样一种预处理：
1.正确处理不匹配的标签，不致无法进行下一步；
2.标签被合适的空白符（如tab制表符）替换，只留下叶子结点标签的InnerText；
3.注意这些叶子结点标签InnerText有可能含有转义字符，如 “&lt;”、“&gt;”等；
4.注意这些叶子结点标签InnerText中可能含有的空格；

标签的正则表达式为“<[^>]*>”，假定“<”和“>”之间不含有“>”，转义过的 "&gt;"并不会影响该正则匹配。


！！按照小于号或者大于号分割的Fields也是可行的。
麻烦的地方在于首先按照\n分割成Group后，表格中第一行按<或者>分割得到3个没用的字段然后才是CityName；但是表格后面几行数据分割得到的是4个没用的字段然后才是CityName；
另，表格里null的标志是“&nbsp;”，但是分号在null属性里被用于分割符了！
----
将第一行数据独立构成一个Group，其余行数据构成另一个Group，那么即可解决字段数不一至问题。
入库的配置文件同样插入这两个Group数据到同一张表即可。

解码中的Time，参照其他Time生成时间，其TimeParts前面加上“-”与不加上“-”含义不同！

GistarLite.Codec.PlainText.cs, line 302 to 314:
为什么NullFlag使用分号“;”作为分割符，而FieldSep使用“|”作为分割符？
为什么没有统一的列表分割符？
除此之外，既然使用了某个字符作为分割符，那么就理应有一种办法转义这个字符，使之作为分割后的内容而不是分割符。

那么需要两次反转义才能得到想要的FieldSeps；
如果将PlainTextCodec之前的反转义除去，放到PlainTextCodec，虽然将只会有一次反转义，但是每个具体的Codec内部都需要重复这个反转义操作。
不太清楚，如果推迟反转义操作到PlainTextCodec内做，会不会对已有的旧配置造成冲突。
要改的不只这一处，还有许多其他地方的转义方案都得有一个一致才行。
