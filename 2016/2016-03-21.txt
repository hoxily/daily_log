为了避免摄像机歪倒。可以采用成躯干-头部两个成分构成的结构。其中躯干仅提供沿着y轴旋转的功能，也就是左右转身的动作。而头部则是躯干的子物体，仅提供沿着x轴的旋转功能，也就是抬头与低头的动作。通过两者的组合，实现player观察环境功能。

线路设置目前是手动在场景中，根据房屋环境，确定观察点。尤其是线路很长的时候，需要添加很多个观察点。除此之外，还得按照顺序，手动把一个个ViewPoint游戏物体拖放到Path脚本的数组上。太过繁琐。可以考虑使用插值的方式，只需手动添加关键点（例如线段的两个端点，贝塞尔曲线的控制点等），用程序自动生成中间点。

另外目前的Path脚本的ViewPoint的数组数据，要求整个场景只能有一条路径。这条由观察点构成的路径，可以重复经过某些观察点。要求所有的观察点构成的网络是连通的。数组内相邻的两个ViewPoint必须是两个连通的观察点。脚本内部在Start初始化时，计算邻接表（Dictionary<Transform, List<Transform>>），以供后续使用。

由于UI的大小限制，导航面板上的箭头按钮不可能放得下太多。所以，最好的情况就是与一个观察点相邻的观察点个数小于等于4；导航面板的旋转与player躯干的旋转一致；唯一遗憾的是2d screen space canvas 无法做到倾斜观察。而world space canvas模式，则会有导航按钮被其他物体遮挡、俯视角度不足而看不到的问题。

uGUI的Button动态绑定事件的时候，没办法传递参数。可以给Button所在游戏物体上再添加一个自定义的MonoBehaviour组件。在这个自定义组件上，可以添加各种参数。

用粒子系统给可交互物品加以提醒？