2018年08月31日，星期五，阵雨转多云，26~33摄氏度，杭州拱墅区

在哔哩哔哩上看到个很有意思的up主，叫抖抖村。up主是一个画手。

终于把SssCalculator搞定。里面全部算法已大致理解。已加上注释。

----

很蛋疼。写测试用例的时候，测试出了十三水的Calculator有bug。在计算三同花时，
//5张的某道与5张的某道相同花色
//！！！该测试用例无法通过。被SssCalculator判定为普通牌型。
{
    var cards = new List<int>
    {
        0, 1, 2,
        13, 14, 15, 16, 17,
        18, 19, 20, 21, 23,
    };
    PrintCards(cards);
    int type = SssCalculator.CalcSpecial(cards, true);
    Debug.Log(CardType.TypeNames[type]);
    Assert.AreEqual(CardType.SanTongHua, type);
}

然后，服务端徐宁开始喷我了。说是之前我看不懂Calculator算法，又不改新的流程。现在又想改流程。

最可怕的是，客户端如果算出来的特殊牌型结果与服务器不一致时，客户端会逼迫玩家舍弃掉特殊牌型。

而我没办法保证能把当前的三同花判定代码改对。只能说，上面这个测试用例，能修正代码逻辑中的一部分错误。但是我不能保证，其他逻辑角落没有错误。

理想情况是服务器来告诉是否为特殊牌型。要错大家一起错。以服务器为准。

所谓的之前测试都没问题。现在出了问题。这TMD的还能是我的锅。只能说之前的测试不充分。按我的想法，最充分的测试，就是把C(52,13)种的手牌情况全部与服务器端核对一遍。光是实际运行，由服务器随机生成，测试不了多少例子。

我能感受到徐宁的不耐烦地态度。这里面一定发生了什么故事。
