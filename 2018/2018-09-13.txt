2018年09月13日，星期四，阵雨转多云，23~30摄氏度，杭州滨江，GPS(30.1950，120.1953)

我一直没想明白几件事。
为什么咿呀游的源代码不写注释？
为什么咿呀游的svn提交日志是空着的？
为什么有些很重要的很难懂的算法也没有相关设计文档？

----

我在csdn blog上发表过两篇使用python挖掘杭电acm题库测试数据的文章。里面有设计思路以及实际可以运行的python代码。然而依然有人留言询问要怎么运行代码。依然有人询问文章中最后输出的那一串0~255范围的数值序列怎么看。可能，写blog最大的作用是写给自己看吧。因为比我牛逼的人，不需要看我的文章，也能想出这个思路，甚至更优。而比我水平差的人，根本看不懂我在说什么。有些新手连理应具有的计算机编码常识都没有。

上面的三个问题都可以归结为成本问题。因为人力资源稀缺。没有把任务分解细化，设计与编码都是同一个人做的工作。而时间却又是紧迫的。你是希望码完最后一行代码，编译没有错误，简单测试运行正常后，再花上一两个小时写写文档呢，还是赶紧下班回家洗洗睡觉呢？真是现实的世界。最蛋疼的是，就像我前面提到的csdn博客文章例子，辛苦写出来的文档很可能新手看不懂，而高手又不需要这个东西。最后则是，文档与注释是需要随源代码的更新而更新的。这相当于加重了工作负担。想法这种东西存在于脑子里就好了？！有啥不懂的，大佬现场亲口解释。现实就是这么残酷。

应对上面的问题，要么祈祷源代码里面不含有复杂晦涩难懂的算法逻辑。要么想办法让写出的代码像白话文一样，一眼就能看懂。改进代码质量。定义约定俗成的命名规则，见名知意。适度的抽象，提取方法，定义必要的概念类型。
