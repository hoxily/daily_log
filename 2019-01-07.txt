2019-01-07

2019年了啊。
上周坐我左边的万园搬到我的右边去了。左边留空，准备了一台新机。今天新人来了。专业测试，198x年人。
名叫苏斌。80后，来自江西宜春，2008年毕业于南昌大学软件工程专业，2009年来到杭州一直从事软件测试工作。
自我评价性格开朗友善好相处，平时爱好打篮球、爬山、唱歌。

----

订单页的合并的单项商品，可以参考HomeGround的系列。
如果要缩放缩略图，可以使用阿里云oss提供的图像缩放功能。在图像链接后面加上“?x-oss-process=image/resize,w_60”，即可将图像缩放至60的宽度。

经测试，图像缩放没有问题。但是ULListView出问题了。怀疑是单个item大小高度超过了ScrollRect的高度引起的。症状是滑动到超高item快消失位置，后面的正常item不出现，呈现空白。没有正常衔接。

IUListView在取GetMaxShowItemNum时，只考虑Item的上边界，而没有考虑Item的下边界。特别是当某一个Item特别高时，且该Item快要滑出视界时，跟在该Item后面的Item项如果高度不足时，会需要很多Item来填充视界。实际代码仅仅是简单地+1.

所以其实应该从极限角度来考虑，也就是忽略startIndex这个Item的高度，从该Item之后的Item高度进行累积预测。

修改后的运行结果不再出现空白。完美。又修了IUListView的一个bug。感觉github上抄下来的这个IUListView好多bug。不知道以后会在哪里跳出来坑我一把。

IUListView还有个HideNonuseableItems方法，可以override。如果仅仅在SetData方法才去回收，会造成浪费，最多会有20个Item项。如果在HideNonuseableItems方法里去回收，应该会更好。
经过测试，发现最多会生成12个GoodsItem项。效果还行。

----

oss缩放没有问题。问题出在HttpServerManager.GetTexture的下载和加载策略上。内部使使用Uri类提取路径加文件名后，把QueryString删掉了。但是显示请求缩放的图与原始图不是一张图。但是HttpServerManager.GetTexture会从本地文件系统加载同一张图。需要能区分不同的查询参数。
莫非要实现一个缓存系统？！！！

为了减少工作量，还是在现有代码上针对该问题进行修改吧。