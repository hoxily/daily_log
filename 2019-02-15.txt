2019-02-15

** 平移矩阵
1  0  0  tx
0  1  0  ty
0  0  1  tz
0  0  0  1
与位置点(x, y, z, 1)的运算后得到(x + tx, y + ty, z + tz, 1);
与方向向量(x, y, z, 0)运算后得到(x, y, z, 0);
该矩阵的逆矩阵就是反向平移矩阵：
1  0  0  -tx
0  1  0  -ty
0  0  1  -tz
0  0  0  1


** 缩放矩阵，沿x轴、y轴、z轴进行缩放：
kx  0   0   0
0  ky   0   0
0   0  kz   0
0   0   0   1
与位置点(x, y, z, 1)运算结果为(kx * x, ky * y, kz * z, 1);
与方向向量(x, y, z, 0)运算的结果为(kx * x, ky * y, kz * z, 0);
当系数kx = ky = kz时，称为统一缩放（uniform scale），否则称之为非统一缩放（nonuniform scale）。从外观上看，统一缩放是缩放整个模型，而非统一缩放会使模型变形。统一缩放不会改变角度和比例信息，而非统一缩放会改变与模型相关的角度和比例。例如在对法线进行变换时，如果存在非统一缩放，直接使用用于变换顶点的变换矩阵的话，就会得到错误的结果。
其逆矩阵为原缩放系数的倒数的缩放矩阵：
1/kx   0     0     0
0   1/ky     0     0
0      0  1/kz     0
0      0     0     1

上面的矩阵只适用于沿坐标轴方向进行缩放。如果希望在任意方向上进行缩放，就需要使用一个复合变换。其中一种方法的主要思想就是，先将缩放轴变换成标准坐标轴，然后进行沿坐标轴的缩放，再使用逆变换得到原来的缩放轴朝向。

** 旋转矩阵

绕x轴旋转θ，其变换矩阵为：
1     0     0     0
0  cosθ -sinθ     0
0  sinθ  cosθ     0
0     0     0     1

绕y轴旋转θ的变换矩阵为：
cosθ  0  sinθ     0
0     1     0     0
-sinθ 0  cosθ     0
0     0     0     1

绕z轴旋转θ的变换矩阵为：
cosθ -sinθ  0     0
sinθ  cosθ  0     0
0     0     1     0
0     0     0     1

旋转矩阵的逆矩阵是旋转相反角度得到的变换矩阵。

** 模型空间
模型空间（model space），是和某个模型或者说是对象有关的。也被称为对象空间（object space）或局部空间（local space）。当模型移动或旋转时，模型空间也跟着它移动和旋转。

** 世界空间
世界空间（world space），是一个特殊的坐标系，它建立了我们所关心的最大的空间。

** Unity Shader的内置变量

UnityShaderVariables.cginc文件内定义了内置变量。位于Editor/Data/CGIncludes目录下。

变量名   描述
UNITY_MATRIX_MVP 当前的模型·观察·投影矩阵，用于将顶点/方向矢量从模型空间变换到裁剪空间
UNITY_MATRIX_MV 当前的模型·观察矩阵，用于将顶点/方向矢量从模型空间变换到观察空间
...