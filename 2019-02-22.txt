2019-02-22

Shader调试技术

假彩色图像。用假彩色技术生成的图像。一张假彩色图像可以用于可视化一些数据。主要思想是把需要调试的变量映身到[0,1]之间，把它们作为颜色输出到屏幕上，然后通过屏幕上显示的像素颜色来判断这个值是否正确。

CG/HLSL中的3种精度的数值类型：float, half, fixed.
float: 最高精度的浮点值。通常使用32位来存储。
half: 中等精度的浮点值。通常使用16位来存储，精度范围是-60000 ~ +60000.
fixed: 最低精度的浮点值。通常使用11位来存储，精度范围是-2.0 ~ +2.0.

在不同的平台和GPU上，这三种类型的实际精度可能与上面给出的范围不一致。

* 大多数现代的桌面GPU会把所有计算都按最高的浮点精度进行计算，也就是说float、half、fixed实际上是等价的。这意味着很难在PC上看出差异。
* 在移动平台的GPU上，它们有不同的精度范围，而且不同精度的浮点值运算速度也有差异。所以需要在移动平台上实验验证写的shader。
* fixed精度只在一些较旧的移动平台上有用。在大多数现代的GPU上，fixed和half被当成同等精度对待。

基本建议：尽可能使用精度较低的类型以优化shader的性能。
（虽然最终计算结果能存入设计的颜色、单位矢量等数据，但是就怕中间计算过程数值溢出而出错。用测试来保证？）

在不同的shader target、不同的着色器阶段，可使用的临时寄存器和指令数目是不同的。

Unity支持的shader target：
指令    含义
#pragma target 2.0    默认的shader target等级。相当于Direct3D 9上的shader model 2.0
#pragma target 3.0    相当于Direct3D 9上的shader model 3.0
#pragma target 4.0    相当于Direct3D 10上的shader model 4.0.
#pragma target 5.0    相当于Direct3D 11上的shader model 5.0.

所有类似OpenGL的平台（包括移动平台）被当在是支持到Shader Model 3.0.

Shader Model是由微软提出的一套规范。通俗地理解就是它们决定了shader中各个特性（feature）的能力（capability）。这些特性和能力体现在shader能使用的运算指令数目、寄存器个数等方面。

可以在shader中使用if-else, for, while流程控制指令。但是GPU使用了不同于CPU的技术来实现分支语句，在最坏的情况下，花在一个分支语句的时间相当于运行了所有分支语句的时间。使用这些流程控制指令，会降低GPU的并行处理操作。

shader性能优化策略
* 尽量把计算向流水线上游移动，例如把放在片元着色器中的计算放到顶点着色器，或者直接在CPU中进行预计算，再把结果传递给shader。
* 分支判断语句中使用的条件变量为常数，即在shader运行过程中不会发生变化。
* 每个分支中包含的操作指令数尽可能少。
* 分支的嵌套层数尽可能少。

不要使用0作除数。有可能会崩溃，有可能会无穷大而被截断，也可能是其他行为，因平台而异。

----

使用辐照度（irradiance）来量化光。对于方向为l的平行光，它的辐照度可以通过计算在垂直于l的单位面积上单位时间内穿过的能量来定义。

光线由光源发射出来后，就会与一些物体相交。通常，相交的结果有两个：散射（scattering）和吸收（absorption）。
散射只改变光线的方向，但不改变光线的密度和颜色。而吸收只改变光线的密度和颜色，但不改变光线的方向。光线在经过物体表面经过散射后，有两种方向：一种将会散射到物体内部，这种现象被称为折射（refraction）或透射（transmission）；另一种将会散射到外部，这种现象被称为反射（reflection）。

对于不透明物体，折射进入物体内部的光线还会继续与内部的颗粒进行相交，其中一些光线最后会重新发射出物体表面，而另一些则被物体吸收。那些从物体表面重新发射出的光线将具有和入射光线不同的方向分布和颜色。

使用高光反射（specular）表示物体表面是如何反射光线的；使用漫反射（diffuse）表示有多少光线会被折射、吸收和散射出表面。

根据入射光线的数量和方向，可以计算出射光线的数量和方向，通常使用出射度（exitance）来描述它。（它指什么？这个计算过程？）

辐照度和出射度之间满足线性关系，而它们之间的比值就是材质的漫反射和高光反射属性。（辐照度可以跟出射度进行比值比较，说明出射度的单位也是单位面积上单位时间穿过的能量。）

着色（shading）是指，根据材质的属性（如漫反射属性等）、光源信息（如光源方向、辐照度等），使用一个等式去计算沿某个观察方向的出射度的过程。也称之为光照模型（Lighting model）。

当给定模型表面上的某一个点时，BRDF（Bidirectional Reflectance Distribution Function）包含了对该点外观的完整描述。通俗地说，当给定入射光线的方向和辐照度后，BRDF可以给出在某个出射方向上的光照能量分布。

对真实场景进行理想化和简化后的BRDF模型，称之为经验模型。尽管如此，这些经验模型仍然在实时渲染领域被应用了多年。

计算机图形学的第一定律：如果它看起来是对的，那么它就是对的。——邓恩

----

标准光照模型。标准光照模型只关心直接光照（direct light）。也就是那些直接从光源发射出来照射到物体表面后，经过物体表面的一次反射直接进入摄像机的光线。

它将进入到摄像机的光线分为四部分，每个部分使用一种方法来计算它的贡献度。

1. 自发光（emissive）部分。描述当给定一个方向时，一个表面本身会向该方向发射多少辐射量。注意：如果没有使用全局光照（global illumination）技术，这些自发光的表面并不会真的照亮周围的物体，而是它本身看起来更亮而已。
2. 高光反射（specular）部分。描述当光线从光源照射到模型表面时，该表面在完全镜面反射方向散射多少辐射量。
3. 漫反射（diffuse）部分。描述当光线从光源照射到模型表面时，该表面会向每个方向散射多少辐射量。
4. 环境光（ambient）部分。描述其他所有间接光照。