2019-04-09

首先App升级受App分发平台限制，不能快速跟上服务器端的版本。另外则是用户可能不愿意升级app版本。这种情况下，服务器需要兼容超多的客户端版本。不管是在JSON接口上使用Object类型方便增加字段的技巧，还是干脆给接口URL地址添加V2、V3后缀作区分，服务器端依然可能需要兼容处理从1.0版本到10.0版本的所有版本。

----

找到了一个临时解决iOS archive归档再export adhoc包，启动应用时crash的解决方案。之前查看这个问题一天没有结果。这次在Google上搜索后，在react-native-unity-view下找到79号issue，一模一样。一路看评论下来研究了一下。结合crash栈，终于发现是vector<string>的析构bug。std::move操作最可疑。

lt_open/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.cpp
修改 ModuleRegistry::moduleNames 方法体。

//修改前
for (size_t i = 0; i < modules_.size(); i++) {
    std::string name = normalizeName(modules_[i]->getName());
    modulesByName_[name] = i;
    names.push_back(std::move(name));
  }
  
//修改后，去除了std::move操作。
for (size_t i = 0; i < modules_.size(); i++) {
    std::string name = normalizeName(modules_[i]->getName());
    modulesByName_[name] = i;
    names.push_back(name);
  }

github相关issue链接：https://github.com/f111fei/react-native-unity-view/issues/79#issuecomment-481249150

