2019-04-28

昨天从范程翔处得知，他有一台退休的iPhone 6机子。正好可以拿来测试那个黑屏bug。研究一下是什么问题。

----

新机子容易出现错误，xcode会要求重启手机。

An error was encountered while attempting to communicate with this device.(The service is invalid.) Please try rebooting and reconnecting the device. (0xE8000022).

上次写的针对iPhone 6机型，使用apiOpenGLES3，在实机上运行会闪退。在xcode调试发现是 Thread 1: EXC_BAD_ACCESS。回头看了一下Unity原有的SelectRenderingAPIImpl代码，里面的逻辑虽然只是从PlayerSettings里取出预设的Rendering API列表，逐个判定了一下是否能应用在本机上。但是仔细看它调用的IsGlesSupported(kEAGLRenderingAPIOpenGLES3)方法内部把将一个EAGLContext实例存储起来。

大概我写的代码就是少了这一步IsGlesSupported调用，导致闪退。
来验证一下。

还是失败。

EAGLContext创建成功了。但是Unity预编译好的shader可能并不包含OpenGLES3的代码，所以还是黑屏。
log里有如下的提示：
“
Desired shader compiler platform 9 is not available in shader blob.
ERROR: Shader Shader is not supported on this GPU (none of subshaders/fallbacks are suitable)
WARNING: Shader Unsupported: 'Sprites/Default' - Setting to default shader.
”

可以尝试一下在Unity里的Graphics API列表改为Metal, OpenGLES3.0。这样的话，非iPhone 6机型优先使用Metal，再是OpenGLES3.而iPhone 6则是强制使用OpenGLES3.只有加上了OpenGLES3.0，Unity才会在打包输出的时候，把shader编译到对应的平台。

测试成功了。

----

看到一个很有意思的视频。跟最近很火的996工作制相关。视频的地址是：https://www.365yg.com/i6679900039097090568 ，制作人是“李永乐老师”。

视频中，李永乐用经济学原理来分析加班的收益与机会成本的关系。虽然听起来挺有道理的。但是感觉是纯粹的感性分析，缺少具体的数值来支持。而且横轴、纵轴的坐标单位也没有说清楚。如果衡量的单位不一样的话，边际成本曲线与边际效用曲线的相交点就会发生变化。

我试着把视频中的鱼与熊掌的数据对调，让熊掌成为鱼的机会成本，发现随着鱼的增长，熊掌的边际成本确实在上升。应该是跟曲线的形状有关系吧。

成本大于收益的区段，就是自我剥削的区段。但是也有可能是被强迫加班呢。

学习以提高生产可能性曲线。

最后有一个疑问：如果加班能升职加薪，算不算提高了生产可能性曲线呢？
