2019年08月21日, 星期三, GPS(30.3111, 120.0898)

换成那台老Android机的GPS定位功能，发现稍微有一点偏。

测试时临时突破Chrome跨域限制的方法：
1.关闭当前已打开的Chrome进程；
2.执行下面的命令来打开Chrome程序："C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --args --disable-web-security --user-data-dir
3.将会在地址栏下方看到Chrome给出的warning提示。

由于webgl模式不支持引用OS自带的font来进行fallback，所以只能看到英文，看不到中文。官方文档上说要在Project里加入fallback的字体。暂时选择了Alibaba-PuHuiTi。但是发现相比默认的Arial，其默认行高比较高，有明显的空白。如果遇到Vertical模式为Truncate的话，就直接看不到文字了。FontSize的值如果为14，高度需要达到20才能显示。也就是扩大45%左右。

看起来跟AlibabaSans这个英文字体的字高有关。换成Windows里的Arial字体，然后在FontNames里加上Alibaba-PuHuiTi作为fallback字体，不会出现之前那样的高度溢出的问题。

这样的话，只需要批量替换Text组件的Font为导入的Arial即可。不需要逐个检查字体是否溢出。

Hierarchy上的物体，可以通过“t:Text”方式来检索带有Text组件的GameObject。这样的话，把UIManager里引用的View拖到Hierarchy上，然后按"t:Text"方式检索，一次性选中全部的Text进行编辑即可。

字体文件名不能叫Arial，否则会跟内置的Arial冲突。可以改成比如Arial-New即可。

经过一番修改，使用宏定义把非WEBGL模式下的网络下载去除了缓存到本地的操作。Build出来一运行，中文已经可以正常查看。加载模型时挂了。想到DracoMeshLoader使用了PInvoke，调用了平台相关的native代码。简单地说，在Assets/Plugins下还需要提供dracodec_unity库的jslib版本。😂

暂时先就这样吧。并不清楚如果搞jslib。
