2019年09月27日, 星期五, GPS(30.3108, 120.0904)

Shader Variant Collection里如果没有启用一个特定的keywords，那么在打包出来的包里就不会包含这个shader代码，造成Editor环境与实机上运行结果不一致。

所以并不是传参的问题。

https://docs.unity3d.com/Manual/OptimizingShaderLoadTime.html 从这篇文章的解释来看，Shader Variant Collection解决的是全量编译费时、包体过大的问题，但是实际使用过程中，仅仅需要时才加载进内存，所以不使用变体而是全部编译应该是ok的。

对于常规的Unity项目来说，场景可能使用到的材质是可以进行跟踪统计的。打包时，不管是打包场景还是打包AssetBundle包，都是可以跟踪统计的，所以可以确保只有用到的Shader Variant才打进包里面。

但是对于我们的项目来说，是根据后台返回的JSON数据来决定要不要启用Keyword。由于不是将每个面料、模型都在Unity端过一遍，统计其Shader Variant，就会造成平时测试时积累的Shader Variant Collection远远无法覆盖实际用户上传的情况。

尝试Always Include LincStandard.shader，不再使用ShaderVariantCollection，结果编译打包时出错了。经过简单地排查，大概是Assets/3D/Resources/Shaders/UnityStandard_Linc下的文件没有处理来互相include的关系。导致如下错误：
“
Shader error in 'Custom/LincStandard': undeclared identifier 'UNITY_SETUP_BRDF_INPUT_ShadowGetOneMinusReflectivity' at /Program Files/Unity2018.2.11f1/Editor/Data/CGIncludes/UnityStandardShadow.cginc(174) (on metal)
”

把Graphics设置里的Screen Space Shadows，从Built-in shader改成No support，编译就通过啦。但是在Mac OS上报错。虽然windows上编译通过了。

----

有待尝试方案2：使用Unity提供的ShaderVariantCollection类，操作ShaderVariantsForBuild这个配置文件，将所有的LincStandard里定义的开关进行排列组合，加入这个collection里面。
