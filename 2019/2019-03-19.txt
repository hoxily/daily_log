2019-03-19

xcode模拟器其实是在电脑上运行的，所以iOS模拟器并没有使用arm指令集。它编译运行使用的是x86指令集(或者i386)。而在真机上使用的才是arm类型的指令集。

Unity导出时使用Device SDK选项时，仅支持arm架构。所以build会报许多未定义的符号、找不到符号的错误。

试试Unity导出Simulator SDK。

使用 lipo -detailed_info xxx.a 指令可以查看一个a文件支持的ARCH列表。

当前Plugins/iOS下的libdracodec.a文件仅支持armv7 armv7s arm64.预设导出Simulator会失败。实际测试发现还没到link阶段就出错了。

----
拆出来各自独立的LightEdit面板、MainMenu面板、FabricEdit面板、ComponentEdit面板等东西之后，会出现两面板之前联动的需求。但是理论上各面板应该只控制自己的下级，而相互之间互不相识，也不在意自己的上级是谁。

举例来说，MainMenu上有一个2种状态的灯光按钮。点击该灯光按钮，按钮的展示图片会在两种状态之间切换。为了可以复用该MainMenu，MainMenu不会直接打开LightEdit面板，而是用委托告知上级。上级再决定是打开灯光编辑面板，还是关闭灯光编辑面板。
麻烦的事情来了，灯光编辑面板上有一个关闭按钮，点击该按钮将会关闭灯光编辑面板。这时又会需要反向通知MainMenu更新灯光按钮的状态。但是不该直接通知MainMenu，而是告知上级，由上级来做。
逻辑特别绕。
尤其是某个独立面板要干的事，涉级到其他面板的数据时候，如果借助上级来做中介协调者，代码写得太绕了。

这说明从直观界面上进行拆分并不合理吗？还是说，UI设计变动会逼迫重写代码？

----
头疼。不会是感冒了吧。