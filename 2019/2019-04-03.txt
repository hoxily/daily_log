2019-04-03

react-native-unity-view的ios导出，对Data文件夹的引用好像是一个绝对路径，而不是相对工程的路径，造成在其他mac电脑上打开出错。需要检查一下。可能需要修改导出用的cs脚本。

使用shadowsocks翻墙一段时间后，再切换回原先的无代理，出现chrome浏览器打开许多网站卡住的问题。这时需要清除一下浏览器各种缓存cookie数据就好了。

----

对于一台打包专用的机器，如果之前打包过android，切换到了android平台。然后针对ios打包直接使用/Applications/Unity/Unity.app/Contents/MacOS/Unity -executeMethod <ClassName.MethodName>方式打包，这时由于ios PostProcessBuild的处理代码使用UNITY_IOS宏定义包裹起来，导致执行指定的Build方法时还没有相应的后处理，导致跳过了PostProcessBuild处理引起出错。

无论如何C#代码也不可能在执行到一半的时候，切个平台，重新编译吧。

所以正确的步骤应该是先单独切换到目标平台，让平台相关宏定义生效的情况下，再执行Build操作。

之前使用BuildFramework遇到过相应的问题，很是奇怪为什么Info.plist根本没有自动调整。总结起来应该就是这个原因。

----

Unity Manual上提供了一个-buildTarget <name>的参数，可以试一下这个参数。它的说明是：
Allows the selection of an active build target before a project is loaded. Possible options are: 
standalone, Win, Win64, OSXUniversal, Linux, Linux64, LinuxUniversal, iOS, Android, Web, WebStreamed, WebGL, XboxOne, PS4, PSP2, WindowsStoreApps, Switch, N3DS, tvOS, PSM.

而-executeMethod 的解释是：
Execute the static method as soon as Unity is started, the project is open and after the optional Asset server update has been performed. 

虽然project is loaded与 project is open有些差异，但是应该会先切换平台再执行给定的静态方法。

----

测试成功。加上buildTarget参数后，能正常执行#if UNITY_IOS包裹的PostProcessBuild代码。观察log输出可以看到先重新编译了一遍C#脚本。

那么，Build里的SwitchActiveBuildTarget其实是没有意义的。特别是对于依赖平台相关宏定义的Build流程。在编辑器下，需要分两部操作。
