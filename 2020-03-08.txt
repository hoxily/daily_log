2020年03月08日, 星期日, 杭州, 多云, 17.8摄氏度

头疼。得先看懂、理清ThreeD部分的代码。

ThreeD里有个描边的脚本。叫HardFillOutline。没懂他的原理。但是可以观察到他的效果。基本上描边的结果是覆盖于被渲染的GameObject之上的。

描边效果由两部分组成。一个是在MainCamera上的OutlineEffect，控制总体的效果。含有描边颜色、填充颜色等参数。另一个则是附加在含有Renderer组件的GameObject上的Outline。启用时这个GameObject将会显示描边。

OutlineEffect可以同时预置3种描边颜色。通过调节Outline上的color属性为0、1、2，可以分别使用OutlineEffect上的Line Color0, Line Color1, Line Color2三种颜色。

Line Thickness是指描边线条的厚度。随数值调大，向外部扩张。
Line Intensity是指描边线条的强度。随数值调大，向内部扩张。强度为0时呈现0色描边。0~1时，是黑色到color的过渡色。大于1时，线条厚度向内部扩张。
Fill Amount是指蒙层的填充程度。填充度为0时，只能看到描边线条。随着填充度增大，整个物体都会被color覆盖，变成一个实心的色块。

另外，Line Intensity会在一定程度上影响Fill Amount的效果，具有加成的效果。

----

简单的在已经加载ShowProductDetail所要求的ID的款式后，再次使用LoadShopProductById方法是可以继续累加款式的。但是缺少管理的数据。

至少需要管理每个部件或者Product归属于哪个PID，才能在后面执行Replace操作。以及批量选中同一个PID的模型，进行整体操作。

就像部件加载替换那样。同一个部件类型的部件同一时刻只能有一个展示。这里的款式同屏搭配也是一样的性质。可以设定一个款式槽的概念。第一个槽默认被ShowProductDetail消息的PID所占据。根据现有的产品需求，还需要第二个槽，这个槽可以允许加载第二个款式。如果这个槽已经被占用，那就需要先清除2号槽现有的款式数据。换成新的款式。

如果允许同一个PID的款式同时出现在场景中（比如想要同时展示正面与背面或者侧面）。那么上面所说的跟PID进行绑定的设计就不合理。应该换成跟槽的编号绑定。

这个槽可以理解为插槽、座位、容器。槽被某个物体占用后，就必须先清除前一个物体，才能放入新物体。

槽的数量可以是动态的增加的，比如当前展示的部件类型小于部件列表的类型数量，添加一个全新的部件类型的部件，就会动态的添加一个槽位。

而这边的款式搭配可以理解为限定死了2个槽位，并且只有第2个槽位可以进行内容更换。