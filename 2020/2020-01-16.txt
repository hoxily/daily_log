2020年01月16日, 星期四, GPS(30.3108, 120.0904)

哈哈哈哈哈。给顶点序列帧插值后，终于跟上了Animator的骨骼动画。

其中的帧更新还可以更优化一些。

1、 记录buffer是否更新，主要耗时在从byte[]转float和Vector3上；
2、 使用swap buffer机制，尽可能减少转换操作。

----

顶点序列帧插值之后，不管Animator的updateMode是什么都能跟上了。看起来跟它没有关系。

avatar在以下版本的unity下测试的抖动情况：
unity2017.3.1f1：抖动；
unity2017.4.35f1: 抖动；
unity2018.2.11f1: 抖动；
unity2018.4.13f1: 抖动；
unity2019.2.9f1: 抖动；

全部都会抖动。
把抖动的视频发到动画效果沟通群里后，邱岩岩说像是跳帧的问题。骆立康说用maya打开看看。

研究了一下ModelImporter里的Animation标签页，里面有一个Resample Curves，也许就能解决跳帧的问题。如果原始文件缺帧，那么使用Resample Curves就能把缺失的帧给补上。

----

导入的FBX模型，其默认的Material会使得头发发白。调整材质为Standard的Fade模式会好很多。

----

优化了实际运行帧率比较高时的情况。缓存了关键帧，直到需要的关键帧不在内存时才去读取。但是代码逻辑写得有点复杂。想得脑壳疼。

----

遇到一个很奇怪的事情。加了CatwalkStage舞台以及人模后，打包出来能看到舞台和衣服，但是看不到人模。在xcode的控制台输出里也看不到任何错误。衣服有在运动。就像是人模隐身了。

在不经意间把竖着的手机横屏过来，竟然看到了人模！造成这样子的bug原因是： Animator的Culling Mode选择了Cull Update Transforms，文档上的说法是“Retarget, IK and write of Transforms are disabled when renderers are not visible.”。也就是说一旦从一开始看不见这个人模，即便动画状态机的normalizedTime还在更新，但是Avatar的骨骼动画被剔除了。

其中在Editor下没有任何异常这个事实又会加强这里没bug的意识。特别是即便选择了与iphonex一样的屏幕分辨率，在Editor下看起来人模也是正常显示的。那是因为Scene窗口的隐藏摄像机观察到了人模！

所以Animation的Culling Mode选择Always Animated即可。
