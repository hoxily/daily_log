2020年05月01日，星期五，台州仙居，雨

看到入门精要的4.8.1章节里的坐标空间变换矩阵列表的时候我的内心是抗拒的。
一共有9个预置的4*4矩阵。况且我又在unity官方手册里找到了一模一样的表格，除了语言是英文，少一些解说，其实是差不多的。
今天是第三次看这个表格了。末尾的两个_World2Object和_Object2World突然让我产生了灵感！
这两个矩阵的名字为什么命名风格与前面的UNITY_MATRIX_MVP风格迥异？是不是可以命名成统一的风格？答案是可以的。

如此一来，这就给了我新的灵感。所有这9个矩阵是相互有关系的。
简单的抄表格一遍，相当于是信息，过了一遍脑子。但是一旦自己也开始思考这些矩阵各自的关系，甚至与前面章节的内容的关系时，就能加深理解。
我们从另一个角度来理解表格为什么列出这9个矩阵。首先，从模型空间、观察空间、裁剪空间、NDC、屏幕空间，shader里的顶点着色器和片段着色器其实只变换到裁剪空间为止。

那么我们只需要关注M、V、P矩阵。又因为矩阵可以根据结合律结合到一起，并且还需要保持MVP这样的顺序，所以理论上我们就有C(3,1)+C(3,2)+C(3,3)种组合形式。其中第三种就是UNITY_MATRIX_MVP，一步到位从模型空间变换到了裁剪空间。对于中间那种组合形式，MV和VP都是有意义的，而MP的组合不是一个连贯的变换，被咔嚓掉。于是我们就有了UNITY_MATRIX_MV、UNITY_MATRIX_VP，两个步长为2的复合变换，分别能将顶点或向量从模型空间变换到观察空间以及从世界空间变换到裁剪空间。对于单选这种组合我们将能得到步长为1的矩阵，分别是_Object2World 、UNITY_MATRIX_V、UNITY_MATRIX_P。这三个矩阵正是前面章节依次讲述的从前一个坐标空间变换到下一个坐标空间的矩阵。
很显然_World2Object是_Object2World的逆矩阵，用于反向变换。既然表格里单独列出来了，说明在实际shader中从世界空间变换回模型空间的情况很常见。
还剩下两个是UNITY_MATRIX_MV的转置和逆转置，即UNITY_MATRIX_T_MV和UNITY_MATRIX_IT_MV。
先说逆转置。看到逆转置应该想到章节4.7的法线变换。我敢打包票，这个逆转置矩阵肯定是用来算法线的。问题在于为什么要换算到观察空间里？不应该还有个MVP的逆转置吗？估计跟法线用于光照计算有关系。
最后一个UNITY_MATRIX_T_MV，还是按书上的hack技巧来解释吧。就是只存在旋转变换时，利用正交矩阵的性质，转置既是逆矩阵。如果还存在统一缩放，那就乘上个缩放倍数的倒数，就能当逆矩阵用了。

----

从webgl变换顶点和旋转都有了方案。但是考虑到iPad也要存userproduct到服务器上，就会产生从unity规范变换到webgl规范的问题。
假如我已经得到了webgl到unity的旋转的变换矩阵。那么从unity到webgl就是个矩阵求逆的过程。旋转也是一样的道理。唯一麻烦的地方在于，需要将矩阵形式表达的旋转，换算成webgl的欧拉角。唯独这一步我还没找到相应的unity API。应该可以参考threejs的数学库吧。
