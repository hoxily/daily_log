2020年09月10日，星期四，杭州

虽然每天早上06：00就起床了。但是老是磨蹭磨蹭，07：00多才出发。今天磨蹭到07：40才出发。这不合理。需要改进。时间主要花在拉屎、洗脸、穿衣、玩手机、看电视、吃早餐上。除了必要的拉屎、洗脸、穿衣、吃早餐，其他的都是没有必要的。需要好好反思。

----

除了灯光计算，已经把Style3D着色器抄完了。然后试了一下定义 #pragma multi_compile xxx，一共有22个开关宏。点击着色器的Inspector面板上的Show Compiled Code，过了很久弹出来正在编译着色器的进度框，一共有400多万个变体。太可怕了。这还没加印绣花和灯光计算呢。

我想到一个比较麻烦的解决方案。新开一个专门编译shader AssetBundle的工程。每次iPad客户端需要一个着色器变体的时候，就把这些关键词的组合按照某个特定顺序排列起来作为一个key，交给这个Shader Compiler去编译。生成AssetBundle，并提供给iPad客户端使用。

我问了下骆立康这个问题。他说万园之前做过运行时编译shader的工作。于是我又去问万园，她否认了这个事情，据她所知做不到。但是万园给了一个CLO的GLSL的例子，里面使用了很多uniform bool bFlagName的例子。CLO的着色器使用了bool变量来控制分支。这说明，这种形式的分支，在性能损失上可以接受。

可以试试做个uniform bool 替换#ifdef 的性能比对。确认后就可以使用这种方案了。
