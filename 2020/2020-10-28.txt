2020年10月28日，星期三，杭州

其实键盘操作无法使用BeginDrag->Dragging->EndDrag模式的原因是你不知道用户什么时候进入、退出编辑模式。如果设计成一旦用键盘移动过印花，那么就触发编辑模式，在编辑模式里印花的移动方式使用针对移动优化的印花网格，然后如果在限定的时间内再次触发编辑模式，那么就继续维持着。一旦出现任何退出的操作，都结束移动模式。可能的退出操作有：1. 印花上、下、左、右移动之外的按键操作；2. 任意的鼠标滚轮、点击操作；其他？

找到一个setDrawRange的函数，BufferGeometry提供的。结合原始版片的groups信息，就可以指定新生成的网格只渲染部分区域，剔除了射线交点的三角面的materialIndex之外的子网格。这样的好处是不用复杂的修改DecalMesh.material属性，在单个material和material数组之间来回变换。

本来想在DraggingPatternDecalGeometry里，根据拿到的原始版片的BufferGeometry结合patterns数组直接将每个顶点的版片ID也塞进attributes里，比如取名叫pattern的BufferAttribute。但是有一个条件限制了。拿到的BufferGeometry已经是移除了三角形index列表的数据格式了，每三个顶点构成一个三角形。而原始sco里的模型是三角形索引的格式，即patterns对应于三角形索引模式时的顶点列表的下标索引。转换成BufferGeometry格式之后，长度都不匹配了。那么只能在加载sco的时候，顺便就把patterns数组也构造出来。这样在展开成BufferGeometry时，顶点对应的版片ID也会复制，依然是配对的。

在LtMesh.geometry里找到了faces，里面的每个face的a,b,c三个顶点引用的正是原始顶点的下标索引。这样的话，就可以在DraggingPatternDecalGeometry里构造出pattern attribute了。

测试。
