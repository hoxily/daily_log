2021年02月25日，星期四，杭州

上班高峰期坐电梯从1楼坐到16楼是很耗时间的事情。一箱人，去向多个楼层。今天用手机上的秒表统计了下，发现有1分钟56秒之久。这还不算上等电梯的时间。


在lib_webgl的代码里，看到让我感觉非常惊讶的代码：

element.style["pointer-events"] = "none";

我就很好奇。我以前见过的规范是说pointer-events这样的snake风格名字，需要变换成camelCase风格，也就是

element.style.pointerEvents = "none";

在浏览器的Console面板里测试了下，发现两者的结果是一样的，都能起作用。


WPS的pdf阅读器竟然还有批注功能。而且批注可以额外在当前页面之外的区域添加更多标记和文字。批注还能选择隐藏或显示。大概批注是PDF文档格式里的一种特殊结构。
一开始我以为想要批注，就会变成直接修改PDF文档正文。原来批注可以是单独分离的。

----

组长分配了一个换色算法的任务。其中的一大难点就是求取图像的RGB像素3通道各自的平均值。因为会有内存溢出的风险。于是搜了一下OSS的图像处理，里面有一个 average-hue 的方法，可以返回一个 { "RGB": "0x5c783b" } 图片主题色。https://help.aliyun.com/document_detail/44976.html 

因为文档上并没有对“主题色”做明确的定义，也没有给出具体的算法，所以使用百度搜索了一下image average hue，结果发现了华为云的OBS图像处理， https://support.huaweicloud.com/fg-obs/obs_01_0490.html ，跟阿里云的OSS图像处理很像，文档风格就像是抄的，只是换了示例图片。

于是我得到了两个average-hue的例子。

使用python PIL.Image 模块读取图片，对RGB像素值求和，然后除以总的像素数量，就得到了RGB各个通道的平均值。对它们取整，跟华为云的average-hue例子是对得上的。但是跟阿里云OSS的average-hue例子无法对上，RGB三个值都对不上。

----

看了一下现在的代码。baseColor有个isDesaturation的褪色标记。而Style3DFabric软件只有叠加、换色开关，并没有褪色开关。只有Style3D软件里才有褪色开关。

理论上，换色模式已经能取得很好的效果了，并不需要对纹理做褪色处理。但是软件里面允许换色和褪色一起使用。

网页端一旦设置DiyColor，必定启用纹理褪色处理。但是这样一来就跟软件端对不上了。
