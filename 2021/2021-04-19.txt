2021年04月19日，星期一，杭州

工作安排
    技术支持角色，难度。
纹理清晰度的问题
    遇到什么难题。
    关注相关的底层的更改，查看是否有可以优化的地方。
    分配连续的时间块去做这个事情。

----

收到了雷哥提供的一张粉红色的毛衣面料图。很大的一张，2819x4096。我用windows 10自带的照片，放大后查看发现了一道十字形的接缝。我以为是图片本身就是很多张图拼接起来的。结果把这张图导入到Style3DFabric里后，又看不到接缝了。所以我又发现了windows 10照片app的一个bug：照片会将比较大的图片分块加载、显示，但是没有处理好接缝处，所以出现了接缝。

上一个bug则是在缩放半透明图片时，将透明区的像素RGB值混入了图案边缘。

总的来说，windows 10照片app使用了3D图形api来加速缩放、显示处理，但是被3D图形api给坑了。

----

雷哥给了一个粉红色的毛衣面料，就是上面提到的2819x4096大小的baseColor图。我尝试了一下上传到平台的面料库，加载出来果然是糊得不能看。与Style3DFabric软件相比，放大后的毛线针织结构消失了。比较了一下2819x4096与oss resize请求里的大小1024x2048，这分辨率也降得太厉害了。去把DisplayLevel调整为High，这样maxTextureSize可以到4096.这时再去加载，可以加载成2048x4096.这时在电脑上与在手机上看，效果已经接近Style3DFabric软件了。

所以问题很可能是出在高度分辨率直接砍半上。尝试用GIMP把2819x4096宽高各缩小一半，再用图片浏览软件放大查看，果然就完全看不出针织结构了。

最后，再尝试了一下getLoadUrl方法里的求POT大小，把nearestPowerOfTwo强制改为THREE.Math.ceilPowerOfTwo，这时测试网页会请求4096x4096大小的图，加载出来的清晰度与Style3DFabric接近。

所以这里面有一个关键点：想要高清，只能扩大或保持为POT.千万不要缩小原图。对于未来的PadToPot方案来说，也是一样的，总是往更大的POT扩。

所以，目前就有一个简单暴力的方式，1. 开启DisplayLevel.High；2. 调整getLoadUrl里的nearestPowerOfTwo为THREE.Math.ceilPowerOfTwo。

其实还有一个问题，那就是getLoadUrl里的缩放scale，先取和width或height中的较大者，跟maxTextureSize比较，如果超出就强制把两者都等比缩放，然后再求nearestPowerOfTwo。理论上，x方向或y方向的缩放没有必要影响到另一个方向。

其实我有一个想法，是不是上面这种简单暴力方式，能应对所有的情况下。只要硬件、内存支持的maxTextureSize能覆盖原始图大小，我们就用THREE.Math.ceilPowerOfTwo。

这样子的清晰度损失会有多大呢？也许可以自己重新从这张 2819x4096图里裁剪。裁出不同的有代表性的NPOT大小的图（保持不缩放，只是裁剪），然后用上面这种简单暴力方案来查看效果。如果OK的话，那就完全可以采用这种方案。妙啊！

PadToPot方案相当于在这个方案的基础，添加了填充处理和UV重新计算的处理。当然还有一点点差异，那就是原始图先拉伸到POT大小，再去采样，而PadToPot则不会将原始图拉伸。
