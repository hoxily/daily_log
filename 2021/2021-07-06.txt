2021年07月06日，星期二，杭州

Q3的OKR来了。要制定什么样的OKR呢？我想要什么呢？

最近突然对 d2loader.exe 的代码感兴趣。用IDA把它把反编译成汇编，然后逐行汇编理解下来，重写成C程序。其实最终的目标并不是重写一个d2loader.exe，而是想用C还原出Diablo II这个游戏。还原出来之后，将其移植到webgl或者移动端。我还从来没有参与过一个大型的RPG游戏开发。到目前为止，对 d2loader.exe 的汇编代码的重写正在稳步进行中，还没有遇到无法理解的东西。即使是奇怪的mov fs:30h，也仅仅是windows系统的内部实现而已。理解并背下来就好了。正常的应用程序，并不需要深入windows操作系统到这种程度。然而拿着IDA去看ijl11.dll或者diablo ii的dll，就会发现大量的seh与异常处理代码。另外，diablo ii应该是C++写的。在反编译的汇编里看到了_CXX_Frame字样。感觉是一个大坑。

OKR对齐讨论。
罗元雷写了一个OKR可能方向的PPT，用以整理思路。
罗元雷总结了如下的三大块可能方向：
1. 视觉效果
  光影调节与软件一致，阴影与环境光；
  云渲染的灯光等设置可以在平台上调节；
  云渲染预览功能；
2. 性能优化
  代码加载速度优化：
    1. 与前端共享一部分npm包；
    2. 按需加载代码；
  纹理分级加载，优化材质系统的性能：
    先加载缩略图，然后再加载完整纹理；
  云减面
    老子云、sketchfab。
  输入事件统一管理框架
    当前多点触控bug多；
    放大镜在移动端拖动时与LtOrbitControl的模型视角变化混乱在一块；
    UI事件的回调频率与3D画面帧率相互配合；
3. 第三方兼容
  兼容第三方平台导出的glb模型。支持对齐Vstitcher与CloSet的显示效果。

其中glb这一块是罗元雷比较感兴趣的。罗元雷说他以前没有关注过数据文件格式这一块。在需要用到模型数据的时候，都是将第三方数据转换成所需的数据。
罗无雷建议我共同关注一下纹理分级加载，优化材质系统性能这一块。
除了这些列出的简短文字，还需要细化。
